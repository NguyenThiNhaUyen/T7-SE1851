import React, { useState } from 'react';
import { Table, Tag, Button, Modal, Descriptions } from 'antd';

const data = [
  {
    key: '1',
    name: 'Nguy·ªÖn VƒÉn A',
    phone: '0987xxxxxx',
    bloodType: 'A+',
    location: 'B·ªánh vi·ªán Ch·ª£ R·∫´y',
    level: 'NOW',
    lastDonate: '2025-06-12',
    recovery: '10 ng√†y',
    note: 'C√≥ m·∫∑t 15‚Äô',
    detail: {
      dob: '01/01/1990',
      gender: 'Nam',
      cccd: '123456789012',
      email: 'nguyenvana@gmail.com',
      address: '123 L√™ L·ª£i, P. B·∫øn Th√†nh, Q.1, TP.HCM',
      job: 'K·ªπ s∆∞ ph·∫ßn m·ªÅm',
      status: 'ƒêang s·∫µn s√†ng (ƒê√£ x√°c minh)',
    },
  },
  {
    key: '2',
    name: 'Tr·∫ßn Th·ªã B',
    phone: '0909xxxxxx',
    bloodType: 'O-',
    location: 'BV 115',
    level: 'FLEXIBLE',
    lastDonate: '2025-05-01',
    recovery: '20 ng√†y',
    note: 'G·ªçi sau 18h',
    detail: {
      dob: '10/10/1995',
      gender: 'N·ªØ',
      cccd: '987654321000',
      email: 'tranb@gmail.com',
      address: '456 L√Ω Th∆∞·ªùng Ki·ªát, Q.10, TP.HCM',
      job: 'Gi√°o vi√™n',
      status: 'ƒêang s·∫µn s√†ng (ƒê√£ x√°c minh)',
    },
  }
];

const UrgentList = () => {
  const [selected, setSelected] = useState(null);
  const [isModalOpen, setIsModalOpen] = useState(false);

  const levelTag = (level) => {
    const color = level === 'NOW' ? 'red' : 'orange';
    return <Tag color={color}>{level}</Tag>;
  };

  const columns = [
    { title: 'STT', dataIndex: 'key' },
    { title: 'H·ªç t√™n', dataIndex: 'name' },
    { title: 'SƒêT', dataIndex: 'phone' },
    { title: 'Nh√≥m m√°u', dataIndex: 'bloodType' },
    { title: 'ƒê·ªãa ƒëi·ªÉm', dataIndex: 'location' },
    {
      title: 'M·ª©c s·∫µn s√†ng',
      dataIndex: 'level',
      render: (level) => levelTag(level)
    },
    { title: 'Hi·∫øn g·∫ßn nh·∫•t', dataIndex: 'lastDonate' },
    { title: 'H·ªìi ph·ª•c', dataIndex: 'recovery' },
    { title: 'Ghi ch√∫', dataIndex: 'note' },
    {
      title: 'H√†nh ƒë·ªông',
      render: (_, record) => (
        <Button type="link" onClick={() => showDetail(record)}>üëÅÔ∏è Chi ti·∫øt</Button>
      )
    }
  ];

  const showDetail = (record) => {
    setSelected(record);
    setIsModalOpen(true);
  };

  return (
    <>
      <Table columns={columns} dataSource={data} pagination={false} />

      {selected && (
        <Modal
          open={isModalOpen}
          title="üìí H·ªì s∆° ng∆∞·ªùi hi·∫øn m√°u kh·∫©n c·∫•p"
          onCancel={() => setIsModalOpen(false)}
          footer={null}
        >
          <Descriptions column={1} bordered>
            <Descriptions.Item label="H·ªç t√™n">{selected.name}</Descriptions.Item>
            <Descriptions.Item label="Ng√†y sinh">{selected.detail.dob}</Descriptions.Item>
            <Descriptions.Item label="Gi·ªõi t√≠nh">{selected.detail.gender}</Descriptions.Item>
            <Descriptions.Item label="CCCD">{selected.detail.cccd}</Descriptions.Item>
            <Descriptions.Item label="SƒêT">{selected.phone}</Descriptions.Item>
            <Descriptions.Item label="Email">{selected.detail.email}</Descriptions.Item>
            <Descriptions.Item label="V·ªã tr√≠ hi·ªán t·∫°i">{selected.location}</Descriptions.Item>
            <Descriptions.Item label="ƒê·ªãa ch·ªâ">{selected.detail.address}</Descriptions.Item>
            <Descriptions.Item label="Nh√≥m m√°u">{selected.bloodType}</Descriptions.Item>
            <Descriptions.Item label="M·ª©c ƒë·ªô s·∫µn s√†ng">{selected.level}</Descriptions.Item>
            <Descriptions.Item label="Hi·∫øn g·∫ßn nh·∫•t">{selected.lastDonate}</Descriptions.Item>
            <Descriptions.Item label="Th·ªùi gian h·ªìi ph·ª•c">{selected.recovery}</Descriptions.Item>
            <Descriptions.Item label="Ngh·ªÅ nghi·ªáp">{selected.detail.job}</Descriptions.Item>
            <Descriptions.Item label="T√¨nh tr·∫°ng">{selected.detail.status}</Descriptions.Item>
          </Descriptions>
        </Modal>
      )}
    </>
  );
};

export default UrgentList;
