import React, { useEffect, useState } from "react";
import { getUserTransfusions, confirmTransfusion } from "../services/transfusion.service";
import "../styles/user.css";
import { toast } from "react-toastify";

const TransfusionConfirm = () => {
  const [user, setUser] = useState(null);
  const [transfusions, setTransfusions] = useState([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    const currentUser = JSON.parse(localStorage.getItem("user"));
    if (!currentUser) {
      toast.error("‚ùå Ng∆∞·ªùi d√πng ch∆∞a ƒëƒÉng nh·∫≠p.");
      return;
    }

    setUser(currentUser);

    getUserTransfusions(currentUser.id)
      .then((res) => {
        setTransfusions(res.data);
        if (res.data.length === 0) {
          toast.info("üì≠ B·∫°n ch∆∞a c√≥ l·ªãch s·ª≠ truy·ªÅn m√°u n√†o.");
        }
      })
      .catch((err) => {
        console.error("L·ªói khi t·∫£i l·ªãch s·ª≠ truy·ªÅn m√°u:", err);
        toast.error("‚ùå Kh√¥ng th·ªÉ t·∫£i d·ªØ li·ªáu. Vui l√≤ng th·ª≠ l·∫°i sau.");
      })
      .finally(() => setLoading(false));
  }, []);

  const handleSubmit = async () => {
    const data = {
      recipientName: "Nguy·ªÖn VƒÉn A",
      bloodType: "A+",
      units: 2,
    };

    try {
      const response = await confirmTransfusion(data);
      toast.success("‚úÖ X√°c nh·∫≠n truy·ªÅn m√°u th√†nh c√¥ng!");
      console.log("ƒê√£ x√°c nh·∫≠n truy·ªÅn m√°u:", response.data);
    } catch (error) {
      console.error("L·ªói x√°c nh·∫≠n truy·ªÅn m√°u:", error.response?.data || error.message);
      toast.error("‚ùå X√°c nh·∫≠n truy·ªÅn m√°u th·∫•t b·∫°i.");
    }
  };

  return (
    <div className="container mt-4">
      <h3 className="text-danger mb-4">üíâ L·ªãch s·ª≠ truy·ªÅn m√°u</h3>

      <button className="btn btn-primary mb-3" onClick={handleSubmit}>
        ‚ûï X√°c nh·∫≠n truy·ªÅn m√°u (test)
      </button>

      {loading ? (
        <div>ƒêang t·∫£i d·ªØ li·ªáu...</div>
      ) : !user ? (
        <div className="alert alert-danger">Ng∆∞·ªùi d√πng ch∆∞a ƒëƒÉng nh·∫≠p.</div>
      ) : transfusions.length === 0 ? (
        <p>Ch∆∞a c√≥ l·∫ßn truy·ªÅn m√°u n√†o.</p>
      ) : (
        <table className="table table-bordered">
          <thead>
            <tr>
              <th>Ng∆∞·ªùi y√™u c·∫ßu</th>
              <th>Nh√≥m m√°u</th>
              <th>Th√†nh ph·∫ßn</th>
              <th>S·ªë l∆∞·ª£ng (ml)</th>
              <th>Ng√†y x√°c nh·∫≠n</th>
              <th>Tr·∫°ng th√°i</th>
            </tr>
          </thead>
          <tbody>
            {transfusions.map((item) => (
              <tr key={item.id}>
                <td>{item.recipientName || "Ch∆∞a r√µ"}</td>
                <td>{item.bloodType}</td>
                <td>{item.component_name}</td>
                <td>{item.units}</td>
                <td>{new Date(item.confirmedAt).toLocaleDateString()}</td>
                <td>{item.status}</td>
              </tr>
            ))}
          </tbody>
        </table>
      )}
    </div>
  );
};

export default TransfusionConfirm;
