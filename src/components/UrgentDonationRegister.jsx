import React, { useEffect, useState } from "react";
import {
  Form, Input, Button, Card, message, Select, DatePicker,
  Typography, Divider, Row, Col
} from "antd";
import axios from "axios";
import AuthService from "../services/auth.service";
import dayjs from "dayjs";
import { HeartOutlined } from "@ant-design/icons";

const { Option } = Select;
const { Title, Text } = Typography;

const UrgentDonationRegister = () => {
  const [form] = Form.useForm();
  const [loading, setLoading] = useState(false);

  useEffect(() => {
    const user = AuthService.getCurrentUser();
    if (user) {
      form.setFieldsValue({
        userId: user.userId,
        fullName: `${user.first_name || ""} ${user.last_name || ""}`,
        phone: user.phone || "",
        bloodTypeId: user.blood_type_id || 1,
        dob: user.dob ? dayjs(user.dob) : null,
        gender: user.gender || "OTHER",
      });
    }
  }, [form]);

  const handleSubmit = async (values) => {
    try {
      setLoading(true);
      const payload = {
        ...values,
        dob: values.dob.format("YYYY-MM-DD"),
        addressRequest: {
          city: values.city,
          district: values.district,
          ward: values.ward,
          detail: values.detail,
        },
      };
      await axios.post("/api/urgent-donors", payload);
      message.success("‚úÖ ƒêƒÉng k√Ω hi·∫øn m√°u kh·∫©n c·∫•p th√†nh c√¥ng!");
      form.resetFields();
    } catch (err) {
      console.error(err);
      message.error("‚ùå ƒêƒÉng k√Ω th·∫•t b·∫°i. Vui l√≤ng th·ª≠ l·∫°i!");
    } finally {
      setLoading(false);
    }
  };

  return (
    <Card
      title={
        <Title level={3} style={{ margin: 0 }}>
          <HeartOutlined style={{ color: "#f44336", marginRight: 8 }} />
          ƒêƒÉng k√Ω hi·∫øn m√°u kh·∫©n c·∫•p
        </Title>
      }
      style={{ maxWidth: 950, margin: "auto", marginTop: 30 }}
      bordered
    >
      <Text type="secondary">
        H√£y ƒëi·ªÅn th√¥ng tin ch√≠nh x√°c ƒë·ªÉ ch√∫ng t√¥i c√≥ th·ªÉ li√™n h·ªá v√† ƒëi·ªÅu ph·ªëi k·ªãp th·ªùi trong c√°c t√¨nh hu·ªëng kh·∫©n c·∫•p.
      </Text>

      <Divider />

      <Form layout="vertical" form={form} onFinish={handleSubmit}>
        {/* HIDDEN */}
        <Form.Item name="userId" hidden><Input type="hidden" /></Form.Item>
        <Form.Item name="bloodTypeId" hidden><Input type="hidden" /></Form.Item>

        <Row gutter={24}>
          {/* C·ªòT 1: Th√¥ng tin ng∆∞·ªùi hi·∫øn */}
          <Col xs={24} md={12}>
            <Title level={4}>1. Th√¥ng tin ng∆∞·ªùi hi·∫øn</Title>

            <Form.Item
              label="H·ªç v√† t√™n"
              name="fullName"
              rules={[{ required: true, message: "Vui l√≤ng nh·∫≠p h·ªç t√™n" }]}
            >
              <Input placeholder="Nh·∫≠p h·ªç v√† t√™n c·ªßa b·∫°n" />
            </Form.Item>

            <Form.Item
              label="S·ªë ƒëi·ªán tho·∫°i"
              name="phone"
              rules={[
                { required: true, message: "Vui l√≤ng nh·∫≠p s·ªë ƒëi·ªán tho·∫°i" },
                { pattern: /^\d{9,11}$/, message: "S·ªë ƒëi·ªán tho·∫°i kh√¥ng h·ª£p l·ªá" }
              ]}
            >
              <Input placeholder="V√≠ d·ª•: 0912345678" />
            </Form.Item>

            <Form.Item
              label="Gi·ªõi t√≠nh"
              name="gender"
              rules={[{ required: true, message: "Ch·ªçn gi·ªõi t√≠nh" }]}
            >
              <Select placeholder="Ch·ªçn gi·ªõi t√≠nh">
                <Option value="MALE">Nam</Option>
                <Option value="FEMALE">N·ªØ</Option>
                <Option value="OTHER">Kh√°c</Option>
              </Select>
            </Form.Item>

            <Form.Item
              label="Ng√†y sinh"
              name="dob"
              rules={[{ required: true, message: "Vui l√≤ng ch·ªçn ng√†y sinh" }]}
            >
              <DatePicker style={{ width: "100%" }} />
            </Form.Item>
          </Col>

          {/* C·ªòT 2: Th√¥ng tin ƒë·ªãa ƒëi·ªÉm */}
          <Col xs={24} md={12}>
            <Title level={4}>2. ƒê·ªãa ƒëi·ªÉm hi·ªán t·∫°i</Title>

            <Form.Item
              label="B·∫°n ƒëang ·ªü ƒë√¢u? (ghi r√µ ƒë·ªãa ƒëi·ªÉm hi·ªán t·∫°i)"
              name="location"
              rules={[{ required: true, message: "Vui l√≤ng nh·∫≠p ƒë·ªãa ƒëi·ªÉm c·ª• th·ªÉ" }]}
            >
              <Input placeholder="VD: G·∫ßn BV 115, Qu·∫≠n 10" />
            </Form.Item>

            <Form.Item label="ƒê·ªãa ch·ªâ h√†nh ch√≠nh">
              <Input.Group compact>
                <Form.Item
                  name="city"
                  rules={[{ required: true, message: "Nh·∫≠p t·ªânh/th√†nh ph·ªë" }]}
                  style={{ width: "32%", marginRight: "2%" }}
                >
                  <Input placeholder="T·ªânh/TP" />
                </Form.Item>
                <Form.Item
                  name="district"
                  rules={[{ required: true, message: "Nh·∫≠p qu·∫≠n/huy·ªán" }]}
                  style={{ width: "32%", marginRight: "2%" }}
                >
                  <Input placeholder="Qu·∫≠n/Huy·ªán" />
                </Form.Item>
                <Form.Item
                  name="ward"
                  rules={[{ required: true, message: "Nh·∫≠p ph∆∞·ªùng/x√£" }]}
                  style={{ width: "32%" }}
                >
                  <Input placeholder="Ph∆∞·ªùng/X√£" />
                </Form.Item>
              </Input.Group>
              <Form.Item
                name="detail"
                rules={[{ required: true, message: "Nh·∫≠p ƒë·ªãa ch·ªâ c·ª• th·ªÉ" }]}
              >
                <Input placeholder="S·ªë nh√†, t√™n ƒë∆∞·ªùng, h·∫ªm n·∫øu c√≥..." />
              </Form.Item>
            </Form.Item>
          </Col>
        </Row>

        <Divider />

        <Form.Item>
          <Button
            type="primary"
            htmlType="submit"
            loading={loading}
            block
            size="large"
            style={{ backgroundColor: "#f44336", borderColor: "#f44336" }}
          >
            üöë G·ª≠i ƒëƒÉng k√Ω hi·∫øn m√°u kh·∫©n c·∫•p
          </Button>
        </Form.Item>
      </Form>
    </Card>
  );
};

export default UrgentDonationRegister;
