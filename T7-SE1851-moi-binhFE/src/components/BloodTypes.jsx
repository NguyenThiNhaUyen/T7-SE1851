import React, { useEffect, useState } from "react";
import { Card, Row, Col, Typography, Tag, Spin, Alert } from "antd";

const { Title, Text, Paragraph } = Typography;

const BloodTypes = () => {
  const [bloodTypes, setBloodTypes] = useState([]);
  const [error, setError] = useState("");
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    const sampleData = [
      { id: 1, name: "A+", rh_factor: "+", compatible_donors: ["A+", "A-", "O+", "O-"], compatible_recipients: ["A+", "AB+"], description: "Nh√≥m m√°u ph·ªï bi·∫øn, c√≥ th·ªÉ nh·∫≠n t·ª´ A+, A-, O+, O-." },
      { id: 2, name: "A-", rh_factor: "-", compatible_donors: ["A-", "O-"], compatible_recipients: ["A+", "A-", "AB+", "AB-"], description: "Nh√≥m m√°u hi·∫øm, an to√†n cho ph·ª• n·ªØ mang thai Rh-." },
      { id: 3, name: "B+", rh_factor: "+", compatible_donors: ["B+", "B-", "O+", "O-"], compatible_recipients: ["B+", "AB+"], description: "Ph·ªï bi·∫øn ·ªü m·ªôt s·ªë khu v·ª±c ch√¢u √Å." },
      { id: 4, name: "B-", rh_factor: "-", compatible_donors: ["B-", "O-"], compatible_recipients: ["B+", "B-", "AB+", "AB-"], description: "√çt g·∫∑p, c·∫ßn b·∫£o qu·∫£n c·∫©n th·∫≠n." },
      { id: 5, name: "AB+", rh_factor: "+", compatible_donors: ["T·∫•t c·∫£"], compatible_recipients: ["AB+"], description: "Nh√≥m nh·∫≠n ph·ªï th√¥ng, hi·∫øm khi hi·∫øn cho ng∆∞·ªùi kh√°c." },
      { id: 6, name: "AB-", rh_factor: "-", compatible_donors: ["AB-", "A-", "B-", "O-"], compatible_recipients: ["AB+", "AB-"], description: "R·∫•t hi·∫øm, c·∫ßn ∆∞u ti√™n b·∫£o qu·∫£n." },
      { id: 7, name: "O+", rh_factor: "+", compatible_donors: ["O+", "O-"], compatible_recipients: ["O+", "A+", "B+", "AB+"], description: "Nh√≥m hi·∫øn r·ªông r√£i, ph·ªï bi·∫øn to√†n c·∫ßu." },
      { id: 8, name: "O-", rh_factor: "-", compatible_donors: ["O-"], compatible_recipients: ["T·∫•t c·∫£"], description: "Nh√≥m hi·∫øn ph·ªï th√¥ng, c·ª©u s·ªëng trong kh·∫©n c·∫•p." },
    ];
    setTimeout(() => {
      setBloodTypes(sampleData);
      setLoading(false);
    }, 500);
  }, []);

  if (loading) return <Spin tip="ƒêang t·∫£i d·ªØ li·ªáu..." size="large" style={{ display: "block", marginTop: 80 }} />;

  return (
    <div style={{ padding: "24px" }}>
      <Title level={2}>ü©∏ C√°c lo·∫°i nh√≥m m√°u</Title>
      {error && <Alert message={error} type="error" showIcon style={{ marginBottom: 16 }} />}
      <Row gutter={[16, 16]}>
        {bloodTypes.map((type) => (
          <Col xs={24} sm={12} md={8} lg={6} key={type.id}>
            <Card
              title={<span>{type.name} <Tag color={type.rh_factor === "+" ? "volcano" : "blue"}>{type.rh_factor}</Tag></span>}
              bordered
              hoverable
            >
              <Text strong>T√≠nh t∆∞∆°ng th√≠ch:</Text>
              <ul style={{ paddingLeft: 16, marginBottom: 12 }}>
                <li><Text type="secondary">Nh·∫≠n t·ª´:</Text> {type.compatible_donors.map(d => <Tag key={d}>{d}</Tag>)}</li>
                <li><Text type="secondary">Hi·∫øn cho:</Text> {type.compatible_recipients.map(r => <Tag key={r} color="green">{r}</Tag>)}</li>
              </ul>
              <Paragraph>{type.description}</Paragraph>
            </Card>
          </Col>
        ))}
      </Row>
    </div>
  );
};

export default BloodTypes;
