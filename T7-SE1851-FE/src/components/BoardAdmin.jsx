// src/pages/AdminDashboard.jsx
import React, { useEffect, useState } from "react";
import "../styles/admin.css";
import { Bar } from 'react-chartjs-2';
import { Chart, BarElement, CategoryScale, LinearScale } from 'chart.js';
import { getAllTransfusions } from "../services/transfusion.service";
Chart.register(BarElement, CategoryScale, LinearScale);

const AdminDashboard = () => {
  const [tab, setTab] = useState("dashboard");
  const [transfusions, setTransfusions] = useState([]);

  useEffect(() => {
    getAllTransfusions()
      .then(res => {
        console.log("‚úÖ D·ªØ li·ªáu t·ª´ API:", res.data);
        if (Array.isArray(res.data)) {
          setTransfusions(res.data);
        } else {
          console.error("‚ùå API kh√¥ng tr·∫£ v·ªÅ m·∫£ng:", res.data);
          setTransfusions([]);
        }
      })
      .catch(error => {
        console.error("‚ùå L·ªói khi g·ªçi API:", error);
        setTransfusions([]);
      });
  }, []);

  const stats = {
    donorsToday: 25,
    bloodUnits: 450,
    urgentRequests: 3,
  };

  const chartData = {
    labels: ['O+', 'A‚àí', 'B+', 'AB‚àí', 'O‚àí'],
    datasets: [{
      label: 'Ph√¢n b·ªë nh√≥m m√°u',
      data: [40, 35, 25, 20, 15],
      backgroundColor: '#ef4444'
    }]
  };

  const chartOptions = {
    responsive: true,
    scales: {
      y: {
        beginAtZero: true,
        max: 50
      }
    }
  };

  const users = [
    { username: "admin", email: "admin@example.com", role: "Qu·∫£n tr·ªã", status: "Ho·∫°t ƒë·ªông" },
    { username: "user1", email: "user1@example.com", role: "Nh√¢n vi√™n", status: "Ho·∫°t ƒë·ªông" },
  ];

  const bloodTypes = [
    { code: "O+", description: "Ph·ªï bi·∫øn" },
    { code: "AB-", description: "Hi·∫øm" },
  ];

  const rules = [
    { component: "H·ªìng c·∫ßu", donor: "O-", recipient: "A+", compatible: true },
    { component: "Huy·∫øt t∆∞∆°ng", donor: "AB+", recipient: "O-", compatible: false },
  ];

  return (
    <div className="admin-layout">
      <aside className="admin-sidebar">
        <h2>QU·∫¢N TR·ªä</h2>
        {["dashboard", "users", "staff", "blood", "compatibility", "notification", "urgent", "history", "report", "blog" ].map((key) => (
          <button key={key} onClick={() => setTab(key)} className={tab === key ? "active" : ""}>
            {key === "dashboard" ? "T·ªïng quan" :
              key === "users" ? "Ng∆∞·ªùi d√πng & Vai tr√≤" :
                key === "staff" ? "Nh√¢n vi√™n y t·∫ø" :
                  key === "blood" ? "Nh√≥m m√°u & Th√†nh ph·∫ßn" :
                    key === "compatibility" ? "Quy t·∫Øc t∆∞∆°ng th√≠ch" :
                      key === "notification" ? "Th√¥ng b√°o" :
                        key === "urgent" ? "Y√™u c·∫ßu kh·∫©n c·∫•p" :
                          key === "history" ? "L·ªãch s·ª≠ hi·∫øn m√°u" :
                            key === "report" ? "B√°o c√°o & Th·ªëng k√™" :
                              "Tin t·ª©c & Blog"
            }
          </button>
        ))}
      </aside>

      <main className="admin-main">
        {tab === "dashboard" && (
          <>
            <h2>T·ªïng quan</h2>
            <div className="dashboard-stats">
              <div className="stat-card">
                <img src="/donor.png" alt="Donors" />
                Ng∆∞·ªùi hi·∫øn h√¥m nay: {stats.donorsToday}
              </div>
              <div className="stat-card">
                <img src="/donvihienmau.png" alt="Blood Units" />
                ƒê∆°n v·ªã m√°u c√≤n: {stats.bloodUnits}
              </div>
              <div className="stat-card">
                <img src="/khancap.png" alt="Urgent Requests" />
                Y√™u c·∫ßu kh·∫©n c·∫•p: {stats.urgentRequests}
              </div>
            </div>
            <div className="chart-container">
              <h3>Ph√¢n b·ªë nh√≥m m√°u</h3>
              <Bar data={chartData} options={chartOptions} />
            </div>
            <div className="chart-container">
              <h3>L·ªãch s·ª≠ truy·ªÅn m√°u g·∫ßn ƒë√¢y</h3>
              <table>
                <thead>
                  <tr>
                    <th>Ng∆∞·ªùi nh·∫≠n</th>
                    <th>Nh√≥m m√°u</th>
                    <th>ƒê∆°n v·ªã</th>
                    <th>Ng√†y</th>
                    <th>Tr·∫°ng th√°i</th>
                  </tr>
                </thead>
                <tbody>
                  {Array.isArray(transfusions) && transfusions.length > 0 ? (
                    transfusions.map((t, i) => (
                      <tr key={i}>
                        <td>{t.recipientName}</td>
                        <td>{t.bloodType}</td>
                        <td>{t.units}</td>
                        <td>{t.confirmedAt ? new Date(t.confirmedAt).toLocaleDateString() : '‚Äî'}</td>
                        <td>{t.status}</td>
                      </tr>
                    ))
                  ) : (
                    <tr>
                      <td colSpan="5">Kh√¥ng c√≥ d·ªØ li·ªáu truy·ªÅn m√°u.</td>
                    </tr>
                  )}
                </tbody>
              </table>
            </div>
          </>
        )}

        {tab === "users" && (
          <div>
            <h2>üë• Qu·∫£n l√Ω ng∆∞·ªùi d√πng</h2>
            <table className="table">
              <thead>
                <tr>
                  <th>T√™n ƒëƒÉng nh·∫≠p</th>
                  <th>Email</th>
                  <th>Vai tr√≤</th>
                  <th>Tr·∫°ng th√°i</th>
                </tr>
              </thead>
              <tbody>
                {users.map((u, i) => (
                  <tr key={i}>
                    <td>{u.username}</td>
                    <td>{u.email}</td>
                    <td>{u.role}</td>
                    <td>{u.status}</td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        )}

        {tab === "blood" && (
          <div>
            <h2>ü©∏ Qu·∫£n l√Ω nh√≥m m√°u</h2>
            <table className="table">
              <thead>
                <tr>
                  <th>M√£ nh√≥m</th>
                  <th>M√¥ t·∫£</th>
                </tr>
              </thead>
              <tbody>
                {bloodTypes.map((b, i) => (
                  <tr key={i}>
                    <td>{b.code}</td>
                    <td>{b.description}</td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        )}

{tab === "staff" && <div>üìã Danh s√°ch nh√¢n vi√™n y t·∫ø</div>}
{tab === "notification" && <div>üîî Qu·∫£n l√Ω th√¥ng b√°o</div>}
{tab === "report" && <div>üìä Th·ªëng k√™ b√°o c√°o</div>}


        {tab === "compatibility" && (
          <div>
            <h2>üîó Quy t·∫Øc t∆∞∆°ng th√≠ch m√°u</h2>
            <table className="table">
              <thead>
                <tr>
                  <th>Th√†nh ph·∫ßn</th>
                  <th>Ng∆∞·ªùi cho</th>
                  <th>Ng∆∞·ªùi nh·∫≠n</th>
                  <th>T∆∞∆°ng th√≠ch</th>
                </tr>
              </thead>
              <tbody>
                {rules.map((r, i) => (
                  <tr key={i}>
                    <td>{r.component}</td>
                    <td>{r.donor}</td>
                    <td>{r.recipient}</td>
                    <td>{r.compatible ? "‚úÖ" : "‚ùå"}</td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        )}

        {tab === "urgent" && (
          <div>
            <h2>üö® Danh s√°ch y√™u c·∫ßu kh·∫©n c·∫•p</h2>
            <table className="table">
              <thead>
                <tr>
                  <th>Ng√†y</th>
                  <th>B·ªánh vi·ªán</th>
                  <th>Nh√≥m m√°u</th>
                  <th>S·ªë ƒë∆°n v·ªã</th>
                  <th>Tr·∫°ng th√°i</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td>‚Äî</td>
                  <td>Ch∆∞a c√≥ d·ªØ li·ªáu t·ª´ API</td>
                  <td>‚Äî</td>
                  <td>‚Äî</td>
                  <td>‚Äî</td>
                </tr>
              </tbody>
            </table>
          </div>
        )}
      </main>
    </div>
  );
};

export default AdminDashboard;
